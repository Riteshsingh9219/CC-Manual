class ListNode: 
def __init__(self, value=0, next=None): 
self.value = value 
self.next = next 
def find_merge_point(head1, head2): 
p1, p2 = head1, head2 
 
while p1 != p2: 
p1 = p1.next if p1 else head2 
p2 = p2.next if p2 else head1 
return p1 
def create_linked_list(values): 
if not values: 
return None 
head = ListNode(values[0]) 
current = head 
for value in values[1:]: 
current.next = ListNode(value) 
current = current.next 
return head 

# Example usage: 
# Create two linked lists that merge at some point 
# List 1: 1 -> 3 -> 5 -> 7 -> 9 
# List 2: 2 -> 4 -> 7 -> 9 
# The merge point is the node with value 7 

head1 = create_linked_list([1, 3, 5, 7, 9]) 
head2 = create_linked_list([2, 4])

# Merge the two lists at node with value 7 

head2.next.next = head1.next.next.next 
merge_point = find_merge_point(head1, head2) 
 
if merge_point: 
print(f"Merge point value: {merge_point.value}") 
else: 
print("No merge point found.") 
