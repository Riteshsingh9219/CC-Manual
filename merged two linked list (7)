class ListNode: 
def __init__(self, val=0, next=None): 
self.val = val 
self.next = next 
def mergeTwoLists(l1: ListNode, l2: ListNode) -> ListNode: 
dummy = ListNode() 
current = dummy 

    while l1 and l2: 
        if l1.val < l2.val: 
            current.next = l1 
            l1 = l1.next 
        else: 
            current.next = l2 
            l2 = l2.next 
        current = current.next 
     
    if l1: 
        current.next = l1 
    else: 
        current.next = l2 
     
    return dummy.next 
 
def createLinkedList(values): 
    dummy = ListNode() 
    current = dummy 
    for val in values: 
        current.next = ListNode(val) 
        current = current.next 
    return dummy.next 
 
def printLinkedList(head): 
    current = head 
    while current: 
        print(current.val, end=" -> ") 
        current = current.next 

print("None") 

if __name__ == "__main__": 

l1 = createLinkedList([1, 3, 5]) 
l2 = createLinkedList([2, 4, 6]) 

merged_list = mergeTwoLists(l1, l2) 

printLinkedList(merged_list) 
