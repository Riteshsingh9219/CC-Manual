class Queue: 
def  init (q, max_size): 
q.max_size = max_size 
q.queue = [None] * max_size 
q.front = -1 
q.rear = -1 
  
def enqueue(q, element): 
if q.front == -1 and q.rear == -1: # If the queue is empty 
q.front = 0 
q.rear = 0 
q.queue[q.rear] = element 
elif (q.rear + 1) % q.max_size == q.front: # If the queue is full 
print("Overflow") 
return 
else: # Normal case 
q.rear = (q.rear + 1) % q.max_size 
q.queue[q.rear] = element 
 
def dequeue(q): 
if q.front == -1 and q.rear == -1: # If the queue is empty 
print("Underflow") 
elif q.front == q.rear:
print(f"Deleted element is: {q.queue[q.front]}") 
q.front = -1 
q.rear = -1 
else: # Normal case 
print(f"Deleted element is: {q.queue[q.front]}") 
q.front = (q.front + 1) % q.max_size 
 
def get_front(q): 
if q.front == -1: # If the queue is empty 
print("Queue is Empty") 
return -1 
return q.queue[q.front] 
  
def get_rear(q): 
if q.rear == -1: # If the queue is empty 
print("Queue is Empty") 
return -1 
return q.queue[q.rear] 
if   name == " main ": 
max_size = 5 
queue_obj = Queue(max_size) 
choice = 1 
print("\nPress 1: Enqueue operation") 
print("Press 2: Dequeue operation") 
print("Press 3: Front operation") 
print("Press 4: Rear operation") 
print("Press 5: EXIT") 
while choice < 5 and choice != 0: 
choice = int(input("Enter your choice: ")) 
