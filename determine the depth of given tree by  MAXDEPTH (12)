class TreeNode: 
    def __init__(self, val=0, left=None, right=None): 
        self.val = val 
        self.left = left 
        self.right = right 
 
def maxDepth(root: TreeNode) -> int: 
    # Base case: if the tree is empty, return 0 
    if not root: 
        return 0 

# Recursively calculate the depth of the left and right subtrees 
left_depth = maxDepth(root.left) 
right_depth = maxDepth(root.right) 

# The depth of the current node is the maximum of the left and right depths, plus 1 

return max(left_depth, right_depth) + 1 

# Example usage: 
# Constructing a binary tree: 
#     3 
#    / \ 
#   9  20 
#     /  \ 
#    15   7

root = TreeNode(3) 
root.left = TreeNode(9) 
root.right = TreeNode(20) 
root.right.left = TreeNode(15) 
root.right.right = TreeNode(7) 
print("The maximum depth of the tree is:", maxDepth(root))
