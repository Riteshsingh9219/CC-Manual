class ListNode: 
def __init__(self, val=0, next=None): 
self.val = val 

        self.next = next 
 
def swapPairs(head: ListNode) -> ListNode: 
    # Create a dummy node to simplify edge cases 
    dummy = ListNode(0) 
    dummy.next = head 
    prev = dummy 
     
    while prev.next and prev.next.next: 
        # Nodes to be swapped 
        first = prev.next 
        second = prev.next.next 
         
        # Swapping 
        prev.next = second 
        first.next = second.next 
        second.next = first 
         
        # Move prev to the node before the next pair 
        prev = first 
     
    return dummy.next 
 
# Helper function to print the linked list 
def printList(head: ListNode): 
    while head: 
        print(head.val, end=" -> " if head.next else "\n") 
        head = head.next 
 

# Example usage 
if __name__ == "__main__": 
# Create a linked list: 1 -> 2 -> 3 -> 4 
head = ListNode(1) 
head.next = ListNode(2) 
head.next.next = ListNode(3) 
head.next.next.next = ListNode(4) 
print("Original List:") 
printList(head) 
# Swap nodes pairwise 
new_head = swapPairs(head) 
print("List after swapping pairwise:") 
printList(new_head) 
